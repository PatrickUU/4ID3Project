#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "4ID3arduino"
  https://create.arduino.cc/cloud/things/968e89a5-f8fd-4fb0-ae51-29c7b974da2f

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String msg;
  float cup;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Servo.h>



//Set digital pins connected to the ultrasonic sensor
#define US_TRIG_PIN 4
#define US_ECHO_PIN 2

//Initialize servos
Servo vodka;
Servo clubSoda;
Servo orange;
Servo cran;

//Global variables used throughout the code for servo position, loop logic, cup distance & delays
int pos = 0;
int step = 0;
long dist = 7.00;

unsigned long previousMillis = 0;
unsigned long previousMillisB = 0;
const long interval = 2000;
const long intervalMix = 3500;

//setup
void setup() {
  Serial.begin(9600);
  delay(1500);
  
  //set pins to servos
  vodka.attach(15);
  clubSoda.attach(16);
  orange.attach(17);
  cran.attach(18);
  
  //write initial start position to servos
  vodka.write(pos);
  clubSoda.write(pos);
  orange.write(pos);
  cran.write(pos);
  
  //Set pinMode of the Ultrasonic Sensor
  pinMode(US_TRIG_PIN, OUTPUT);
  pinMode(US_ECHO_PIN, INPUT);
  
  //Pre given from IoT Cloud Platform
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

}

//main loop
void loop() {
  ArduinoCloud.update();
  
  //Ultrasonic sensor calculation
  long duration, Distance_Sensor;
  digitalWrite(US_TRIG_PIN,LOW);
  delayMicroseconds(2);
  
  digitalWrite(US_TRIG_PIN, HIGH);
  delayMicroseconds(10);
  
  digitalWrite(US_TRIG_PIN,LOW);
  duration = pulseIn(US_ECHO_PIN,HIGH);
  cup = (duration/2)/29.1;
  
  //for debugging
  Serial.println(duration);
  Serial.println(cup);
  
  //go back to step 0 once drink is finished
  if(msg=="Drink is made"){
    step=0;
    onMsgChange();
  }
  
  //Open "alcohol" valve
  unsigned long currentMillis = millis();
  if ((msg == "VS" || msg=="VO" || msg=="VC" || msg=="V")&& cup<=dist) {
    if (step == 0) // Open Vodka
    {
      for (pos = 0; pos <= 70; pos += 1) {
        vodka.write(pos);
        delay(1);
        if (pos == 70) {
          previousMillis = currentMillis;
          step = 1;
        }
      }
    }
    if (step == 1 && (currentMillis - previousMillis >= interval)) { // Close Vodka
      for (pos = 70; pos >= 0; pos -= 1) {
        vodka.write(pos);
        delay(1);
        if (pos == 0) {
          step = 2;
          if(msg=="V"){
            step=4;
            msg="Drink is made";
          }
        }
      }
    }
    
    //open selected "mix"
    unsigned long currentMillisB = millis();
    if (step == 2) { //Open Soda
      for (pos = 0; pos <= 70; pos += 1) {
        if(msg=="VS"){
          clubSoda.write(pos);
          delay(1);
          if (pos == 70) {
            previousMillisB = currentMillisB;
            step = 3;
          }
        }
        else if(msg=="VO"){
          orange.write(pos);
          delay(1);
          if (pos == 70) {
            previousMillisB = currentMillisB;
            step = 3;
          }
        }
        else if(msg=="VC"){
          cran.write(pos);
          delay(1);
          if (pos == 70) {
            previousMillisB = currentMillisB;
            step = 3;
          }
        }
      }
    }
    if (step == 3 && (currentMillisB - previousMillisB >= intervalMix)) {
      for (pos = 70; pos >= 0; pos -= 1) {
        if(msg=="VS"){
          clubSoda.write(pos);
          delay(1);
          if (pos == 0) {
            step = 4;
            msg = "Drink is made";
          }
        }
        else if(msg=="VO"){
          orange.write(pos);
          delay(1);
          if (pos == 0) {
            step = 4;
            msg = "Drink is made";
          }
        }
        else if(msg=="VC"){
          cran.write(pos);
          delay(1);
          if (pos == 0) {
            step = 4;
            msg = "Drink is made";
          }
        }
      }
    }
  }
}

//created by IoT cloud platform
void onMsgChange()  {
  //menu message output
  if(msg=="start" || msg== "Drink is made"){
    msg="Vodka Orange = VO --------------- Vodka Cran = VC ------------------ Vodka Soda = VS ------------------ Vodka Shot = V ---------------- ";
  }
}

















